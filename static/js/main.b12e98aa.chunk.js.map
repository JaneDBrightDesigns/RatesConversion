{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","className","value","onChange","map","option","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setamountInFromCurrency","useEffect","fetch","then","res","json","data","console","log","firstCurrency","Object","keys","rates","base","url","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEe,SAASA,EAAYC,GAAQ,IAErCC,EAKCD,EALDC,gBACAC,EAICF,EAJDE,iBACAC,EAGCH,EAHDG,iBACAC,EAECJ,EAFDI,eACAC,EACCL,EADDK,OAEH,OACI,gCACG,uBAAOC,KAAM,SAAQC,UAAU,QAAQC,MAAQH,EAAQI,SAAUL,IACjE,wBAAQI,MAAON,EAAkBO,SAAUN,EAA3C,SACKF,EAAgBS,KAAI,SAAAC,GAAM,OAC3B,wBAAqBH,MAAQG,EAA7B,SAAsCA,GAAzBA,WC0FbC,MAlGf,WAAgB,IAWVC,EAAUC,EAXD,EAG+BC,mBAAS,IAHxC,mBAGNd,EAHM,KAGUe,EAHV,OAI0BD,qBAJ1B,mBAINE,EAJM,KAIQC,EAJR,OAKsBH,qBALtB,mBAKNI,EALM,KAKMC,EALN,OAM0BL,qBAN1B,mBAMNM,EANM,KAMQC,EANR,OAOcP,mBAAS,GAPvB,mBAONV,EAPM,KAOEkB,EAPF,OAQ0CR,oBAAS,GARnD,mBAQNS,EARM,KAQgBC,EARhB,KAuEb,OA3DGD,GACDV,EAAYT,EACZQ,EAAUR,EAASgB,IAEnBR,EAAWR,EACXS,EAAaT,EAASgB,GAGxBK,qBAAU,WACRC,MAvBY,4CAwBTC,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACfF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ,IAAMG,EAAgBC,OAAOC,KAAKL,EAAKM,OAAO,GAC9CrB,EAAmB,CAACe,EAAKO,MAAP,mBAAeH,OAAOC,KAAKL,EAAKM,UAClDnB,EAAgBa,EAAKO,MACrBlB,EAAcc,GACdZ,EAAgBS,EAAKM,MAAMH,SAI/B,IAEFR,qBAAU,WAIR,GAFJM,QAAQC,IAAoB,MAAfhB,GAAqC,MAAdE,GAEb,MAAfF,GAAqC,MAAdE,EAAmB,CAE5C,IAAMoB,EAAM,kDAAkDpB,EAAW,SAASF,EAClFe,QAAQC,IAAIM,GACXZ,MAAOY,GAKPX,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKM,MAAMlB,UAG3C,CAACF,EAAcE,IAqBf,sBAAKZ,UAAW,MAAhB,UAEA,kDAFA,OAIA,cAACR,EAAD,CACAE,gBAAiBA,EACjBC,iBAAkBe,EAClBd,iBAAkB,SAAAqC,GAAC,OAAGtB,EAAgBsB,EAAEC,OAAOjC,QAC/CJ,eAxBF,SAAgCoC,GAC9BjB,EAAUiB,EAAEC,OAAOjC,OACnBiB,GAAwB,IAuBxBpB,OAASS,IAET,qBAAKP,UAAU,SAAf,eAXA,KAaA,cAACR,EAAD,CACAE,gBAAiBA,EACjBC,iBAAkBiB,EAClBhB,iBAAkB,SAAAqC,GAAC,OAAGpB,EAAcoB,EAAEC,OAAOjC,QAC7CJ,eA3BF,SAA8BoC,GAC5BjB,EAAUiB,EAAEC,OAAOjC,OACnBiB,GAAwB,IA0BxBpB,OAAUQ,QC7Fd6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b12e98aa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CurrencyRow(props) {\r\n   const{ \r\n       currencyOptions,\r\n       selectedCurrency,\r\n       onChangeCurrency,\r\n       onChangeAmount,\r\n       amount\r\n     }= props\r\n    return (\r\n        <div>\r\n           <input type ='number'className='input' value ={amount} onChange={onChangeAmount}/>\r\n           <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n               {currencyOptions.map(option=>(\r\n               <option key={option} value ={option}>{option}</option>    \r\n               ))}               \r\n           </select>\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect,useState} from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\n\nconst BASE_URL =' https://api.exchangeratesapi.io/latest '\n\nfunction App() {\n\n\n  const [currencyOptions,setCurrencyOptions]= useState([])  \n  const [fromCurrency, setFromCurrency]= useState()\n  const [toCurrency, setToCurrency]= useState()\n  const [exchangeRate, setExchangeRate]= useState()\n  const [amount, setAmount]= useState(1)\n  const [amountInFromCurrency, setamountInFromCurrency]= useState(true)\n      \n\n  let toAmount, fromAmount\n  if(amountInFromCurrency){\n    fromAmount= amount\n    toAmount =amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n  useEffect(()=>{\n    fetch(BASE_URL)\n      .then(res=> res.json())\n      .then(data=>{\n        console.log(data)\n        const firstCurrency = Object.keys(data.rates)[0] \n        setCurrencyOptions([data.base,...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])   \n     \n        \n      })\n  },[])\n\n  useEffect(()=> {\n\nconsole.log((fromCurrency!= null && toCurrency != null))\n    \n    if (fromCurrency!= null && toCurrency != null){\n    \n      const url = \"https://api.exchangeratesapi.io/latest?symbols=\"+toCurrency+\"&base=\"+fromCurrency\n      console.log(url)\n       fetch (url)\n      /* '${BASE_URL} ?base${fromCurrency} &symbols=${toCurrency}'\n      console.log(a)\n        fetch (a)\n       /* '${BASE_URL} ?base${fromCurrency} &symbols=${toCurrency}')*/\n      .then(res => res.json())\n      .then(data => setExchangeRate(data.rates[toCurrency]))\n   \n    }    \n  },[fromCurrency, toCurrency])\n\n\n\n\n  function handleFromAmountChange(e){\n    setAmount(e.target.value)\n    setamountInFromCurrency(true)      \n    \n  }\n\n  function handleToAmountChange(e){\n    setAmount(e.target.value)\n    setamountInFromCurrency(false)  \n    \n  }\n\n\n\n  return (\n    \n    <div className= 'app' >\n     \n    <h1>RATES CONVERSION</h1>\n    From\n    <CurrencyRow \n    currencyOptions={currencyOptions} \n    selectedCurrency={fromCurrency}\n    onChangeCurrency={e=> setFromCurrency(e.target.value)}\n    onChangeAmount={handleFromAmountChange}\n    amount= {fromAmount}\n    /> \n    <div className='equals'>=</div>\n    To\n    <CurrencyRow \n    currencyOptions={currencyOptions} \n    selectedCurrency={toCurrency}\n    onChangeCurrency={e=> setToCurrency(e.target.value)}\n    onChangeAmount={handleToAmountChange}\n    amount = {toAmount}\n    />    \n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}